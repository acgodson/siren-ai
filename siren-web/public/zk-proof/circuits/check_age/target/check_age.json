{"noir_version":"0.32.0+c679f01a19b02ad2ac2287c8e699b46887f7872c","hash":10306624198580083123,"abi":{"parameters":[{"name":"lat1","type":{"kind":"integer","sign":"unsigned","width":64},"visibility":"public"},{"name":"lon1","type":{"kind":"integer","sign":"unsigned","width":64},"visibility":"public"},{"name":"lat2","type":{"kind":"integer","sign":"unsigned","width":64},"visibility":"public"},{"name":"lon2","type":{"kind":"integer","sign":"unsigned","width":64},"visibility":"public"}],"return_type":null,"error_types":{}},"bytecode":"H4sIAAAAAAAA/+Va227aQBAd25AmIRdIyJ22RGmVvtUbIBipD6V/wsWokYiIUqdR/7642VWn601K1mcJESOhtQbPMOfMYew1ePRgn6avL/LYm74Cuab2VfN5Bp9v8AXSV5R5fMqazz4jtUZ42WzG7YtYNEQvvOj0o1bYbPUvIxGJVtQaXkSNRhw1o3an32mHHdFsxGLU6jRG4YPxXGE+E759LqE7DNBhuTmvBbkW9UYWWPOUr8iK0BMsekOeWVeo1SUKQIxFsFA8Bz0oOMj7FtdbI+4wn/3Riwvc78C4lQXgOleAXAJ7LZD88XnG8SrT51mYzwSyPz656U/euk7pdej7zWJqUiD54/rmeF1xukrLNTNW58Dp2pLpdG0GTsN8JpA6XQP2et0RpyrvPDdTHpDjwD7Xi22mSnLdIPp341Si7GZqg9xvplw1JO9mqgTEuAEWCvrmn/cfmfcM11snm6nAEe4PYNzK0BfxTSCXwF4LJH98nnG8ytCbKQ/Yn4Dc9CdvXef0OvS9tZiaFEj+uL45XlecbtNyzYztOXBaXjKdlmfgNMxnAqnTMrDXFUecVgyc+lBOL0frQB52HPGg8hbp7694uqHvI5FYDOVick+7wbnYlWtVEaIITN9oa770pHWtKKy4QlElnLj2YHWJiPOwZ+ABPbh2ADzEo6kNRGcXyGmV3IgcPaQqQMz75GZIqbzzHFJILIZynQypA7keKkIUgekb+pBKT3I9pA4JJ64jcjOkjsj9kNon3JA6AHJ6SG5EjuZvF5gLyd8xuRl4Ku9Tj/rRAy8PlhG3gYgM5Tp5PH8i15oiRBFYI/dbpmN7IWUen58QTpQ1R41EP/Y9AfZC/b+NW0Gr3WcaSG2THZfY8alce0kSX98k9WRS/3HXT257g6R+f5V8r09+xrej8eQ+PWnLNrD8dOD13Ti5uhn/ygbu2AZWWWAtG9gbDrMxNVt4720DT23hndkGfrTg5dz2wz7bBrafW6Wak6tyXWEJ9OuJ6fryTfrV195jfn4THkgfaed57Nhn+R47x3skT8lQZ8Xgs8XZJTPOLmVxdg316Ti79H+cpjyz4vwNpJuhVLAtAAA=","debug_symbols":"tdhBboMwEAXQu3jNwp7xMIarVFVFElIhRRAFUqlCuXuhraPKzQY5fzl4/BYWH2PP5tDuru9vXX8cRlO/zOY07JupG/qlmo3/fjSem36txqm5TKZ2gQvT9gdTE8mtMMfu1Jpa+Fb8a/WWflu9839bXwsjQLsE2gq0Q67tNNoUErsC2s4icYfEKRfnEHFfpTgjcY/EBbnmJRJXJI4MqEMmlJAJpeyE6h0P6atIhMQZiXsknp3QKu5DYjnFSySuSDwg8dyEioutQunezxaJOyROwDVnRuIeiSMTysiEMjKhnJtQtfG/RV36VeQKiHv7PJzKFHdInJA4I3GPxAWJ5yZUJYZIyzREXpF4eB6uNsUrIC4WiTskTkickXhuQgPH1iCU4oLEHyaU7sdiknQHEN08I2yeUW2bsRQfzaVrdqd2vbNbx679Pl7hLeX0ef4ZWXq/AA==","file_map":{"53":{"source":"use dep::std;\n\nfn main(lat1: pub u64, lon1: pub u64, lat2: pub u64, lon2: pub u64) {\n    // Threshold is 1 km, scaled to 1000\n    let threshold: u64 = 1_000;\n\n    let distance: u64 = calculate_distance(lat1, lon1, lat2, lon2);\n    assert(distance >= threshold);\n}\n\nfn calculate_distance(lat1: u64, lon1: u64, lat2: u64, lon2: u64) -> u64 {\n    // Calculate absolute differences\n    let d_lat: u64 = if lat2 >= lat1 { lat2 - lat1 } else { lat1 - lat2 };\n    let d_lon: u64 = if lon2 >= lon1 { lon2 - lon1 } else { lon1 - lon2 };\n\n    // Convert degree differences to approximate kilometers\n    // 1 degree is roughly 111 km, so we multiply by 111 and divide by 1000 (the scale factor)\n    let d_lat_km: u64 = d_lat * 111 / 1000;\n    let d_lon_km: u64 = d_lon * 111 / 1000;\n\n    // Use Manhattan distance as a simple approximation\n    d_lat_km + d_lon_km\n}\n\n#[test]\nfn test_main() {\n    // Example coordinates scaled by 1000\n    let lat1 = 52_520; // 52.520 degrees\n    let lon1 = 13_405; // 13.405 degrees\n\n    let lat2 = 48_857; // 48.857 degrees\n    let lon2 = 2_352; // 2.352 degrees\n\n    // 52_520,13_405,48_857,2_352\n    // 52520,13405,48857,2352\n\n    main(lat1, lon1, lat2, lon2);\n}\n\n","path":"/Users/godson/Desktop/BnB Hack/zk-proof/circuits/check_age/src/main.nr"}},"names":["main"]}